***************************************************************************
t=686119a7-a95d-4525-8de7-252d231e7041
***************************************************************************

sudo -u postgres psql <<'SQL'
-- 1) DB + 角色
CREATE DATABASE echo_db;
CREATE ROLE echo_app LOGIN PASSWORD 'StrongPassword!' VALID UNTIL 'infinity';
\c echo_db

-- 2) schema 與權限
CREATE SCHEMA echo AUTHORIZATION postgres;
GRANT USAGE ON SCHEMA echo TO echo_app;
GRANT SELECT,INSERT,UPDATE,DELETE ON ALL TABLES IN SCHEMA echo TO echo_app;
GRANT USAGE, SELECT ON ALL SEQUENCES IN SCHEMA echo TO echo_app;
ALTER ROLE echo_app SET search_path TO echo, public;

-- 3) 型別、觸發器、三張表（和我們討論一致）
CREATE TYPE echo.channel_enum AS ENUM ('line','web');
CREATE TYPE echo.status_enum  AS ENUM ('pending','running','done','failed');
CREATE TYPE echo.truth_enum   AS ENUM ('true','false','mixed','unverified','uncertain');
CREATE TYPE echo.side_enum    AS ENUM ('pro','con');

CREATE OR REPLACE FUNCTION echo.set_updated_at()
RETURNS TRIGGER LANGUAGE plpgsql AS $$ BEGIN NEW.updated_at = NOW(); RETURN NEW; END $$;

CREATE TABLE conversations (
  id BIGSERIAL PRIMARY KEY,
  t UUID UNIQUE NOT NULL,
  channel echo.channel_enum NOT NULL,
  user_id TEXT,
  input_text TEXT NOT NULL,
  status echo.status_enum NOT NULL DEFAULT 'pending',
  created_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),
  updated_at TIMESTAMPTZ NOT NULL DEFAULT NOW()
);
CREATE TRIGGER trg_conversations_updated
BEFORE UPDATE ON conversations FOR EACH ROW EXECUTE FUNCTION echo.set_updated_at();

CREATE TABLE analysis_summary (
  id BIGSERIAL PRIMARY KEY,
  conversation_t UUID NOT NULL REFERENCES conversations(t) ON DELETE CASCADE,
  cofact_correctness JSONB,
  cofact_viewpoints  JSONB,
  news_truth_label   echo.truth_enum,
  credibility_percent NUMERIC(5,2) CHECK (credibility_percent BETWEEN 0 AND 100),
  model_final_correctness echo.truth_enum,
  model_viewpoints    JSONB,
  judge_final_verdict TEXT,
  judge_confidence    NUMERIC(5,2) CHECK (judge_confidence BETWEEN 0 AND 100),
  llm_correctness     JSONB,
  llm_viewpoints      JSONB,
  llm_refs            JSONB,
  slm_correctness     JSONB,
  extra               JSONB,
  created_at          TIMESTAMPTZ NOT NULL DEFAULT NOW(),
  UNIQUE (conversation_t)
);

CREATE TABLE debate_turns (
  id BIGSERIAL PRIMARY KEY,
  conversation_t UUID NOT NULL REFERENCES conversations(t) ON DELETE CASCADE,
  side echo.side_enum NOT NULL,
  turn_index SMALLINT NOT NULL CHECK (turn_index BETWEEN 1 AND 12),
  content TEXT,
  score NUMERIC(5,2),
  meta  JSONB,
  created_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),
  UNIQUE (conversation_t, side, turn_index)
);

-- 4) 種一筆完成狀態資料
SET search_path TO echo, public;
CREATE EXTENSION IF NOT EXISTS pgcrypto;

DO $$
DECLARE v_t uuid := gen_random_uuid();
BEGIN
  INSERT INTO conversations(t, channel, user_id, input_text, status)
  VALUES (v_t, 'web', 'U_demo_line_user', '柯文哲出獄了', 'done');

  INSERT INTO analysis_summary(
    conversation_t,
    cofact_correctness, cofact_viewpoints,            -- ★ 新增這兩個位置
    news_truth_label, credibility_percent,
    model_final_correctness, model_viewpoints,
    judge_final_verdict, judge_confidence,
    llm_correctness, llm_viewpoints, llm_refs,
    slm_correctness, extra
  )
  VALUES(
    v_t,
    -- ★ 依你需求：沒找到 + false + 空字串
    jsonb_build_object('found', false, 'label', '', 'note', '沒找到'),
    '[]'::jsonb,
    'false', 70.00,
    'false', '[{"point":"澄清交保與出獄的法律差異","weight":0.8}]',
    '交保≠出獄', 91.00,
    '{"label":"false","score":0.90}',
    '[]'::jsonb,
    '[]'::jsonb,
    '{"label":"false","score":0.90}',
    jsonb_build_object('seed', true)
  );

  INSERT INTO debate_turns(conversation_t, side, turn_index, content, score)
  SELECT v_t,'con',row_number() over(), x
  FROM (VALUES ('仍為被告，案件在審理中。'),('檢方求刑 28 年 6 個月。')) t(x);

  INSERT INTO debate_turns(conversation_t, side, turn_index, content, score)
  SELECT v_t,'pro',row_number() over(), x
  FROM (VALUES ('2025/09/08 以 7000 萬交保。'),('限制出境出海與電子監控。')) t(x);

  RAISE NOTICE 'Seed OK t=%', v_t;
END $$;

-- 回傳最新 t（複製給前端/後端測試）
SELECT t FROM conversations ORDER BY created_at DESC LIMIT 1;
SQL

******************************************Table********************************************
CREATE DATABASE
CREATE ROLE
You are now connected to database "echo_db" as user "postgres".
CREATE SCHEMA
GRANT
GRANT
GRANT
ALTER ROLE
CREATE TYPE
CREATE TYPE
CREATE TYPE
CREATE TYPE
CREATE FUNCTION
CREATE TABLE
CREATE TRIGGER
CREATE TABLE
CREATE TABLE
SET
CREATE EXTENSION
ERROR:  INSERT has more target columns than expressions
LINE 1: ...bate_turns(conversation_t, side, turn_index, content, score)
                                                                 ^
QUERY:  INSERT INTO debate_turns(conversation_t, side, turn_index, content, score)
  SELECT v_t,'con',row_number() over(), x
  FROM (VALUES ('仍為被告，案件在審理中。'),('檢方求刑 28 年 6 個月。')) t(x)
CONTEXT:  PL/pgSQL function inline_code_block line 31 at SQL statement
 t 
---
*************************PINCHEN1017***********************
//  安裝與環境
# 在你的使用者家目錄
mkdir -p ~/echo_flask && cd ~/echo_flask
python3 -m venv .venv
source .venv/bin/activate
python -m pip install --upgrade pip setuptools wheel

# 安裝 Flask + SQLAlchemy + psycopg3 + LINE SDK + Gunicorn + CORS
pip install "Flask==3.0.3" "flask-cors==4.0.1" \
            "SQLAlchemy==2.0.35" "psycopg[binary]==3.2.10" \
            "python-dotenv==1.0.1" "line-bot-sdk==3.11.0" "gunicorn==23.0.0"

***********************************************************
sudo -u postgres psql -d echo_db <<'SQL'
SET search_path TO echo, public;
CREATE EXTENSION IF NOT EXISTS pgcrypto;

DO $$
DECLARE v_t uuid := gen_random_uuid();
BEGIN
  INSERT INTO conversations(t, channel, user_id, input_text, status)
  VALUES (v_t, 'web', 'U_demo_line_user', '柯文哲出獄了', 'done');

  INSERT INTO analysis_summary(
    conversation_t,
    cofact_correctness, cofact_viewpoints,
    news_truth_label, credibility_percent,
    model_final_correctness, model_viewpoints,
    judge_final_verdict, judge_confidence,
    llm_correctness, llm_viewpoints, llm_refs,
    slm_correctness, extra
  ) VALUES(
    v_t,
    jsonb_build_object('found', false, 'label', '', 'note', '沒找到'),
    '[]'::jsonb,
    'false', 70.00,
    'false', '[{"point":"澄清交保與出獄的法律差異","weight":0.8}]',
    '交保≠出獄', 91.00,
    '{"label":"false","score":0.90}',
    '[]'::jsonb, '[]'::jsonb,
    '{"label":"false","score":0.90}',
    jsonb_build_object('seed', true)
  );

  INSERT INTO debate_turns(conversation_t, side, turn_index, content, score)
  SELECT v_t,'con', row_number() over(), x, 0.80
  FROM (VALUES
    ('仍為被告，案件在審理中。'),
    ('檢方求刑 28 年 6 個月。')
  ) t(x);

  INSERT INTO debate_turns(conversation_t, side, turn_index, content, score)
  SELECT v_t,'pro', row_number() over(), x, 0.70
  FROM (VALUES
    ('2025/09/08 以 7000 萬交保。'),
    ('限制出境出海與電子監控。')
  ) t(x);

  RAISE NOTICE 'Seed OK t=%', v_t;
END $$;

SELECT t FROM conversations ORDER BY created_at DESC LIMIT 1;
SQL

*******************************************
ROLLBACK;
SET search_path TO echo, public;
CREATE EXTENSION IF NOT EXISTS pgcrypto;

DO $$
DECLARE v_t uuid := gen_random_uuid();
BEGIN
  -- 1) conversations
  INSERT INTO conversations(t, channel, user_id, input_text, status)
  VALUES (v_t, 'web', 'U_demo_line_user', '柯文哲出獄了', 'done');

  -- 2) analysis_summary（含 cofact_correctness：沒找到/false/空字串）
  INSERT INTO analysis_summary(
    conversation_t,
    cofact_correctness, cofact_viewpoints,
    news_truth_label, credibility_percent,
    model_final_correctness, model_viewpoints,
    judge_final_verdict, judge_confidence,
    llm_correctness, llm_viewpoints, llm_refs,
    slm_correctness, extra
  )
  VALUES(
    v_t,
    jsonb_build_object('found', false, 'label', '', 'note', '沒找到'),
    '[]'::jsonb,
    'false', 70.00,
    'false', '[{"point":"澄清交保與出獄的法律差異","weight":0.8}]',
    '交保≠出獄', 91.00,
    '{"label":"false","score":0.90}',
    '[]'::jsonb,
    '[]'::jsonb,
    '{"label":"false","score":0.90}',
    jsonb_build_object('seed', true)
  );

  -- 3) debate_turns：補上第 5 欄位 score
  -- 反方（con）
  INSERT INTO debate_turns(conversation_t, side, turn_index, content, score)
  SELECT v_t,'con', row_number() over(), x, 0.80
  FROM (VALUES
    ('仍為被告，案件在審理中。'),
    ('檢方求刑 28 年 6 個月。')
  ) t(x);

  -- 正方（pro）
  INSERT INTO debate_turns(conversation_t, side, turn_index, content, score)
  SELECT v_t,'pro', row_number() over(), x, 0.70
  FROM (VALUES
    ('2025/09/08 以 7000 萬交保。'),
    ('限制出境出海與電子監控。')
  ) t(x);

  RAISE NOTICE 'Seed OK t=%', v_t;
END $$;

-- 驗證（複製這個 t 給前端/後端用）
SELECT t FROM conversations ORDER BY created_at DESC LIMIT 1;

-- （可選）快速檢查
SELECT news_truth_label, credibility_percent, cofact_correctness
FROM analysis_summary
WHERE conversation_t = (SELECT t FROM conversations ORDER BY created_at DESC LIMIT 1);

SELECT side, turn_index, content, score
FROM debate_turns
WHERE conversation_t = (SELECT t FROM conversations ORDER BY created_at DESC LIMIT 1)
ORDER BY side, turn_index;
